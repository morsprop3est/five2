generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model userFavoriteListing {
  id        Int      @id @default(autoincrement())
  userId    String?  @db.VarChar(72)
  listingId Int?
  user      user?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userFavoriteListing_ibfk_1")
  listing   listing? @relation(fields: [listingId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userFavoriteListing_ibfk_2")

  @@index([listingId], map: "listingId")
  @@index([userId], map: "userId")
}

model bodyType {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(255)
  listing          listing[]
  userSearchFilter userSearchFilter[]
}

model carBrand {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(255)
  carModel         carModel[]
  listing          listing[]
  userSearchFilter userSearchFilter[]
}

model carModel {
  id               Int                @id @default(autoincrement())
  brandId          Int?
  name             String?            @db.VarChar(255)
  carBrand         carBrand?          @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "carModel_ibfk_1")
  listing          listing[]
  userSearchFilter userSearchFilter[]

  @@index([brandId], map: "brandId")
}

model fuelType {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(255)
  listing          listing[]
  userSearchFilter userSearchFilter[]
}

model gearboxType {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(255)
  listing          listing[]
  userSearchFilter userSearchFilter[]
}

model listing {
  id            Int                   @id @default(autoincrement())
  externalId    String?               @unique(map: "externalId") @db.VarChar(255)
  title         String?               @db.VarChar(255)
  brandId       Int?
  modelId       Int?
  year          Int?
  price         Int?
  mileage       Int?
  photoUrl      String?               @db.Text
  bodyTypeId    Int?
  gearboxTypeId Int?
  fuelTypeId    Int?
  power         Int?
  sourceId      Int?
  externalUrl   String?               @db.Text
  parsedAt      DateTime?             @db.Timestamp(0)
  carBrand      carBrand?             @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_1")
  carModel      carModel?             @relation(fields: [modelId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_2")
  bodyType      bodyType?             @relation(fields: [bodyTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_3")
  gearboxType   gearboxType?          @relation(fields: [gearboxTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_4")
  fuelType      fuelType?             @relation(fields: [fuelTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_5")
  sourceSite    sourceSite?           @relation(fields: [sourceId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "listing_ibfk_6")
  favoritedBy   userFavoriteListing[]

  @@index([bodyTypeId], map: "bodyTypeId")
  @@index([brandId], map: "brandId")
  @@index([fuelTypeId], map: "fuelTypeId")
  @@index([gearboxTypeId], map: "gearboxTypeId")
  @@index([modelId], map: "modelId")
  @@index([sourceId], map: "sourceId")
}

model sourceSite {
  id      Int       @id @default(autoincrement())
  name    String?   @db.VarChar(255)
  logoUrl String?   @db.Text
  listing listing[]
}

model user {
  id               String                @id @db.VarChar(72)
  username         String?               @db.VarChar(255)
  email            String?               @unique(map: "email") @db.VarChar(255)
  phone            String?               @db.VarChar(20)
  telegramUsername String?               @db.VarChar(255)
  avatarUrl        String?               @db.VarChar(255)
  registrationDate DateTime?             @db.Timestamp(0)
  lastActivity     DateTime?             @db.Timestamp(0)
  favoriteListings userFavoriteListing[]
  userSearchFilter userSearchFilter[]
}

model userSearchFilter {
  id             Int          @id @default(autoincrement())
  userId         String?      @db.VarChar(72)
  brandId        Int?
  modelId        Int?
  maxPrice       Float?       @db.Float
  minPrice       Float?       @db.Float
  maxMileage     Int?
  minMileage     Int?
  minYear        Int?
  maxYear        Int?
  bodyTypeId     Int?
  gearboxTypeId  Int?
  maxPower       Float?       @db.Float
  minPower       Float?       @db.Float
  fuelTypeId     Int?
  sendToTelegram Boolean?
  user           user?        @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_1")
  carBrand       carBrand?    @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_2")
  carModel       carModel?    @relation(fields: [modelId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_3")
  bodyType       bodyType?    @relation(fields: [bodyTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_4")
  gearboxType    gearboxType? @relation(fields: [gearboxTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_5")
  fuelType       fuelType?    @relation(fields: [fuelTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userSearchFilter_ibfk_6")

  @@index([bodyTypeId], map: "bodyTypeId")
  @@index([brandId], map: "brandId")
  @@index([fuelTypeId], map: "fuelTypeId")
  @@index([gearboxTypeId], map: "gearboxTypeId")
  @@index([modelId], map: "modelId")
  @@index([userId], map: "userId")
}
